const LETTERS_REGEX = '[A-Z][a-z]';
const FONT_FAMILY_REGEX = `^${LETTERS_REGEX}+(${LETTERS_REGEX}+)?`;
const ALLOWED_FONT_WEIGHT_REGEX = [
  'Thin',
  'Hairline',
  'ExtraLight',
  'UltraLight',
  'Light',
  'Regular',
  'Medium',
  'SemiBold',
  'DemiBold',
  'Bold',
  'ExtraBold',
  'UltraBold',
  'Black',
  'Heavy',
  'ExtraBlack',
  'UltraBlack',
].join('|');
const ALLOWED_FONT_EXTENSION_REGEX = ['otf', 'ttf', 'woff', 'woff2'].join('|');
const FAMILY_REGEX = `(${FONT_FAMILY_REGEX})`;
const WEIGHT_REGEX = `(${ALLOWED_FONT_WEIGHT_REGEX})`;
const EXTENSION_REGEX = `(${ALLOWED_FONT_EXTENSION_REGEX})$`;
const FONT_FILE_NAME_REGEX = new RegExp(
  `${FAMILY_REGEX}-${WEIGHT_REGEX}\\.${EXTENSION_REGEX}`,
);

const SPLIT_CHARS_REGEX = String.raw`(?:_|__|-|\s)`;

const ITALIC_REGEX = new RegExp(`${SPLIT_CHARS_REGEX}?(italic)`, 'i');

const VARIABLE_FONT_REGEX = new RegExp(`${SPLIT_CHARS_REGEX}?(var)`, 'i');

const EMAIL_REGEX = new RegExp(
  String.raw`^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$`,
);

const LETTERS_WITH_SPACES_REGEX = new RegExp(String.raw`^[\sA-Za-zЁА-яё]+$`);

const NOT_SEPARATE_REGEX = new RegExp(String.raw`^\+[\d-]+$`);

const NOT_SPACE_REGEX = new RegExp(String.raw`^\S+$`, 'i');

const HTML_EXTENSION_REGEX = '.html';
const PUG_EXTENSION_REGEX = '.pug';

const extensions = {
  HTML_EXTENSION_REGEX,
  PUG_EXTENSION_REGEX,
  FILE_EXTENSION_REGEX: new RegExp(String.raw`\.[^.]+$`),
  JS_EXTENSION_REGEX: new RegExp(String.raw`\.js$`),
  PUG_EXTENSION_REGEX_REGEX: new RegExp(`${PUG_EXTENSION_REGEX}$`),
  SCSS_EXTENSION_REGEX: new RegExp(String.raw`\.s[ac]ss$`),

  NODE_MODULES_REGEX: new RegExp('node_modules'),
};

const numbers = {
  ALL_REGEX: new RegExp(String.raw`^\d+$`),
};

const phones = {
  RU_REGEX: new RegExp(String.raw`^\+7 \((9\d{2,3})\) \d{3}-\d{2}-\d{2}$`),
  US_REGEX: new RegExp(String.raw`^\+1 \((\d{3})\) \d{3}-\d{4}$`),
};

const SYMBOLS_REGEX = '[a-z0-9]';
const ATTRIBUTE_REGEX = String.raw`?\[(.*)\]`;
const CLASS_REGEX = String.raw`?\.(.*)`;
const MODIFIER_REGEX = '--';
const ELEMENT_REGEX = '__';

const selectors = {
  bem: {
    BLOCK_REGEX: `[a-z]${SYMBOLS_REGEX}*(-${SYMBOLS_REGEX}+)`,
    ELEMENT_REGEX: `(${ELEMENT_REGEX}${SYMBOLS_REGEX}+(-${SYMBOLS_REGEX}+)*)`,
    MODIFIER_REGEX: `(${MODIFIER_REGEX}${SYMBOLS_REGEX}+(-${SYMBOLS_REGEX}+)*)`,
  },
  nested: {
    ATTRIBUTE_REGEX,
    CLASS_REGEX,
    ELEMENT_REGEX,
    MODIFIER_REGEX,
  },
  child: {
    ATTRIBUTE_REGEX: `${ATTRIBUTE_REGEX} &`,
    CLASS_REGEX: `${CLASS_REGEX} &`,
  },
};

export { EMAIL_REGEX, FONT_FILE_NAME_REGEX, ITALIC_REGEX, LETTERS_WITH_SPACES_REGEX, NOT_SEPARATE_REGEX, NOT_SPACE_REGEX, VARIABLE_FONT_REGEX, extensions, numbers, phones, selectors };
